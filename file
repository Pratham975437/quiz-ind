<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>India Quiz — 5 Questions</title>
  <style>
    :root{--bg:#0f1724;--card:#0b1220;--accent:#06b6d4;--muted:#94a3b8;--correct:#16a34a;--wrong:#dc2626}
    *{box-sizing:border-box}
    body{margin:0;font-family:Inter,ui-sans-serif,system-ui,-apple-system,'Segoe UI',Roboto,'Helvetica Neue',Arial;background:linear-gradient(180deg,#071427 0%, #021026 100%);color:#e6eef6;min-height:100vh;display:flex;align-items:center;justify-content:center;padding:24px}
    .card{width:100%;max-width:760px;background:linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.06));border-radius:16px;padding:28px;box-shadow:0 10px 30px rgba(2,6,23,0.6)}
    h1{margin:0 0 6px;font-size:20px}
    p.lead{margin:0 0 18px;color:var(--muted)}
    .progress{height:10px;background:rgba(255,255,255,0.04);border-radius:999px;overflow:hidden;margin:18px 0}
    .progress > i{display:block;height:100%;background:linear-gradient(90deg,var(--accent),#7c3aed);width:0%}
    .question{font-size:18px;margin:8px 0 18px}
    .options{display:grid;grid-template-columns:1fr;gap:10px}
    .option{background:rgba(255,255,255,0.02);padding:12px;border-radius:10px;border:1px solid rgba(255,255,255,0.03);cursor:pointer;transition:transform .12s,box-shadow .12s}
    .option:hover{transform:translateY(-3px)}
    .option.selected{outline:2px solid rgba(6,182,212,0.12);box-shadow:0 6px 18px rgba(6,182,212,0.08)}
    .controls{display:flex;gap:10px;align-items:center;margin-top:18px}
    button{background:var(--accent);color:#022;border:0;padding:10px 14px;border-radius:8px;font-weight:600;cursor:pointer}
    button.ghost{background:transparent;color:var(--muted);border:1px solid rgba(255,255,255,0.04)}
    .result{padding:18px;border-radius:12px;margin-top:16px;background:rgba(255,255,255,0.02);border:1px solid rgba(255,255,255,0.03)}
    .answer-correct{color:var(--correct);font-weight:700}
    .answer-wrong{color:var(--wrong);font-weight:700}
    footer{margin-top:12px;color:var(--muted);font-size:13px}
    @media (min-width:640px){.options{grid-template-columns:1fr 1fr}}
  </style>
</head>
<body>
  <div class="card" role="main">
    <header>
      <h1>India Quiz — 5 Questions</h1>
      <p class="lead">Test your knowledge about India. Select the best answer and click <strong>Next</strong>.</p>
    </header>

    <div class="progress" aria-hidden="true"><i id="prog"></i></div>

    <section id="quiz-area">
      <!-- Question area injected by JS -->
    </section>

    <div class="controls">
      <button id="nextBtn">Next</button>
      <button id="restartBtn" class="ghost" aria-hidden="true">Restart</button>
      <div style="margin-left:auto;color:var(--muted)" id="qcount">Question 1 of 5</div>
    </div>

    <div id="final" class="result" aria-live="polite" style="display:none"></div>

    <footer>Built with plain HTML/CSS/JS • No frameworks • Accessible keyboard support</footer>
  </div>

  <script>
    const questions = [
      {
        q: 'What is the capital city of India?',
        choices: ['Mumbai','New Delhi','Kolkata','Chennai'],
        correct: 1
      },
      {
        q: 'Which river is considered the longest river that flows entirely in India?',
        choices: ['Godavari','Narmada','Ganges','Krishna'],
        correct: 0
      },
      {
        q: 'Which year did India gain independence from British rule?',
        choices: ['1945','1947','1950','1952'],
        correct: 1
      },
      {
        q: 'Which Indian monument is known as the "Symbol of Love" and is a UNESCO World Heritage site?',
        choices: ['Qutub Minar','Red Fort','Taj Mahal','Hawa Mahal'],
        correct: 2
      },
      {
        q: 'Which is the largest state by area in India?',
        choices: ['Maharashtra','Rajasthan','Madhya Pradesh','Uttar Pradesh'],
        correct: 1
      }
    ];

    let idx = 0, score = 0, selected = null;
    let userAnswers = [];
    const quizArea = document.getElementById('quiz-area');
    const prog = document.getElementById('prog');
    const qcount = document.getElementById('qcount');
    const nextBtn = document.getElementById('nextBtn');
    const restartBtn = document.getElementById('restartBtn');
    const final = document.getElementById('final');

    function renderQuestion() {
      selected = null;
      final.style.display = 'none';
      restartBtn.setAttribute('aria-hidden','true');
      const data = questions[idx];
      qcount.textContent = `Question ${idx+1} of ${questions.length}`;
      prog.style.width = `${Math.round((idx/questions.length)*100)}%`;

      quizArea.innerHTML = `
        <div>
          <div class="question" id="qtext">${escapeHtml(data.q)}</div>
          <div class="options" role="list" id="opts">
            ${data.choices.map((c,i)=>`<div tabindex="0" role="button" data-index="${i}" class="option" aria-pressed="false">${escapeHtml(c)}</div>`).join('')}
          </div>
        </div>
      `;

      // attach handlers
      document.querySelectorAll('.option').forEach(el=>{
        el.addEventListener('click', ()=> choose(parseInt(el.dataset.index), el));
        el.addEventListener('keydown', (e)=>{
          if(e.key === 'Enter' || e.key === ' ') { e.preventDefault(); choose(parseInt(el.dataset.index), el); }
        });
      });

      // restore previous answer if any
      if (typeof userAnswers[idx] !== 'undefined' && userAnswers[idx] !== null) {
        const prev = document.querySelector(`.option[data-index="${userAnswers[idx]}"]`);
        if (prev) { prev.classList.add('selected'); prev.setAttribute('aria-pressed','true'); selected = userAnswers[idx]; }
      }

      // Next button text
      nextBtn.textContent = idx === questions.length-1 ? 'Finish' : 'Next';
    }

    function choose(choiceIndex, element){
      // visually mark
      document.querySelectorAll('.option').forEach(o=>{ o.classList.remove('selected'); o.setAttribute('aria-pressed','false'); });
      element.classList.add('selected');
      element.setAttribute('aria-pressed','true');
      selected = choiceIndex;
    }

    nextBtn.addEventListener('click', ()=>{
      if(selected === null){
        // if no selection, highlight briefly
        flashMessage('Please select an answer before continuing.');
        return;
      }
      // check
      const correctIndex = questions[idx].correct;
      const opts = document.querySelectorAll('.option');
      opts.forEach((o)=>{
        const i = parseInt(o.dataset.index);
        o.style.pointerEvents = 'none';
        if(i === correctIndex) o.style.border = `2px solid rgba(22,163,74,0.18)`;
        if(i === selected && i !== correctIndex) o.style.border = `2px solid rgba(220,38,38,0.18)`;
      });

      // save user's answer
      userAnswers[idx] = selected;

      if(selected === correctIndex) score++;
      idx++;

      if(idx < questions.length){
        // brief delay then next
        setTimeout(()=> renderQuestion(), 600);
      } else {
        // show final
        setTimeout(()=> showFinal(), 600);
      }
    });

    restartBtn.addEventListener('click', ()=>{
      idx = 0; score = 0; selected = null; userAnswers = []; renderQuestion(); updateProgress(); restartBtn.setAttribute('aria-hidden','true'); final.style.display='none';
    });

    function showFinal(){
      prog.style.width = `100%`;
      quizArea.innerHTML = '';
      final.style.display = 'block';
      final.innerHTML = `<h3>Your score: ${score} / ${questions.length}</h3>`;

      // detailed answers with user's choice and correct answer
      const list = questions.map((q,i)=>{
        const userIdx = (typeof userAnswers[i] === 'number') ? userAnswers[i] : null;
        const userText = userIdx !== null ? q.choices[userIdx] : 'No answer';
        const correctText = q.choices[q.correct];
        const isCorrect = userIdx === q.correct;
        return `<div style="margin-top:10px"><div style="font-weight:600">Q${i+1}. ${escapeHtml(q.q)}</div><div>Your answer: <span class="${isCorrect ? 'answer-correct' : 'answer-wrong'}">${escapeHtml(userText)}</span></div><div>Correct answer: <span class="answer-correct">${escapeHtml(correctText)}</span></div></div>`;
      }).join('');

      final.innerHTML += `<div style="margin-top:12px">${list}</div>`;
      restartBtn.removeAttribute('aria-hidden');
      restartBtn.focus();
    }

    // small helper to show a temporary message
    function flashMessage(msg){
      const el = document.createElement('div');
      el.textContent = msg; el.style.position='fixed'; el.style.left='50%'; el.style.top='20px'; el.style.transform='translateX(-50%)'; el.style.background='rgba(0,0,0,0.7)'; el.style.padding='10px 14px'; el.style.borderRadius='8px'; el.style.boxShadow='0 6px 18px rgba(2,6,23,0.6)'; el.style.zIndex=9999; document.body.appendChild(el);
      setTimeout(()=>{ el.style.transition='opacity .3s'; el.style.opacity='0'; setTimeout(()=>el.remove(),300)},1300);
    }

    function escapeHtml(s){
      return String(s).replace(/[&<>\"']/g, function(c){
        return {'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c];
      });
    }

    function updateProgress(){ prog.style.width = `${Math.round((idx/questions.length)*100)}%`; }

    // init
    renderQuestion(); updateProgress();
  </script>
</body>
</html>

